AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: >-
  AWS CloudFormation template for secretfree provisioning
Parameters:
  TemplateBucket:
    Default: elberger-secretfree-template
    Description: >-
      The S3 bucket into which the template, lambda functions, and Web
      content have been uploaded.
    Type: String
  SkuName:
    Default: widgiot
    Description: >-
      Usually the shortened product name, uniquely representing a
      product line. This is done to keep multiple product capabilities
      and certificate issuance separate from one another.
    Type: String
  AcmPcaCaArn:
    Default: put-your-arn-here
    Description: >-
      The CA Arn for ACM PCA CA.  Note that this value is not
      validated and is applied to the lambda function environment.
    Type: String
  CertValidityDays:
    Default: '180'
    Description: >-
      ACM PCA cert generation: certificate validity in days.
    Type: Number
  SigningAlgorithm:
    Default: SHA256WITHRSA
    Description: >-
      Valid ACM PCA signing algorithm used in vending the certificate.
    Type: String

Outputs:
  ProvisioningTableArn:
    Description: >-
      The ARN for the provisioning DynamoDB table.
    Value: !GetAtt ProvisioningTable.Arn
    Export:
      Name: !Sub "${AWS::StackName}-ProvisioningTableArn"
  ProvisioningTableStream:
    Description: >-
      The Stream ARN for the provisioning DynamoDB table.
    Value: !GetAtt ProvisioningTable.StreamArn
    Export:
      Name: !Sub "${AWS::StackName}-ProvisioningTableStream"
  ProvisioningTableName:
    Description: >-
      The simple name for the provisioning DynamoDB table.
    Value: !Ref ProvisioningTable
    Export:
      Name: !Sub "${AWS::StackName}-ProvisioningTableName"

Resources:
  PerSkuLambdaAuthorizer:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${SkuName}-secretfree-authorizer
      CodeUri: src/authorizer
      Handler: main.lambda_handler
      Runtime: python3.13
      MemorySize: 1024
      Environment:
        Variables:
          SECRETFREE_TABLENAME: !Ref ProvisioningTable

  PerSkuLambdaProvisioningACMPCA:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${SkuName}-secretfree-acmpca
      CodeUri: src/issuer-acmpca
      Handler: main.lambda_handler
      Runtime: python3.13
      MemorySize: 1024
      Environment:
        Variables:
          ACMPCA_CA_ARN: !Ref AcmPcaCaArn
          SKUNAME: !Ref SkuName
          CERT_VALIDITY_DAYS: !Ref CertValidityDays
          CERT_SIGNING_ALGO: !Ref SigningAlgorithm

  PerSkuLambdaProvisioningIotCore:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: secretfree-iotcore
      CodeUri: src/issuer-iotcore
      Handler: main.lambda_handler
      Runtime: python3.13
      MemorySize: 1024
      Environment:
        Variables:
          SKUNAME: !Ref SkuName

  ProvisioningTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        -
          AttributeName: "device-id"
          AttributeType: "S"
      BillingMode: PAY_PER_REQUEST
      KeySchema: 
        - 
          AttributeName: "device-id"
          KeyType: "HASH"
      TableName: !Sub ${SkuName}-iot-provisioning-secretfree
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  SecretfreeApi:
    Type: AWS::Serverless::Api
    Properties:
      DefinitionUri: ./api-definition.yaml
      StageName: dev

  ApiToAuthorizer:
    Type: AWS::Serverless::Connector
    Properties:
      Source:
        Id: SecretfreeApi
      Destination:
        Id: PerSkuLambdaAuthorizer
      Permissions:
        - Write

  ApiToIotcHandler:
    Type: AWS::Serverless::Connector
    Properties:
      Source:
        Id: SecretfreeApi
      Destination:
        Id: PerSkuLambdaProvisioningIotCore
      Permissions:
        - Write

  ApiToAcmpcaHandler:
    Type: AWS::Serverless::Connector
    Properties:
      Source:
        Id: SecretfreeApi
      Destination:
        Id: PerSkuLambdaProvisioningACMPCA
      Permissions:
        - Write
